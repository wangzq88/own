// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: proto/getuserinfo/getuserinfo.proto

package getuserinfo

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/micro/v3/service/api"
	client "github.com/micro/micro/v3/service/client"
	server "github.com/micro/micro/v3/service/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for Getuserinfo service

func NewGetuserinfoEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for Getuserinfo service

type GetuserinfoService interface {
	Getuserinfocd(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	UploadAvatar(ctx context.Context, in *UploadReq, opts ...client.CallOption) (*UploadResp, error)
	GetUserHouses(ctx context.Context, in *HousesRequest, opts ...client.CallOption) (*HousesResponse, error)
	PutUserName(ctx context.Context, in *SetNameRequest, opts ...client.CallOption) (*SetNameResponse, error)
}

type getuserinfoService struct {
	c    client.Client
	name string
}

func NewGetuserinfoService(name string, c client.Client) GetuserinfoService {
	return &getuserinfoService{
		c:    c,
		name: name,
	}
}

func (c *getuserinfoService) Getuserinfocd(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.name, "Getuserinfo.Getuserinfocd", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getuserinfoService) UploadAvatar(ctx context.Context, in *UploadReq, opts ...client.CallOption) (*UploadResp, error) {
	req := c.c.NewRequest(c.name, "Getuserinfo.UploadAvatar", in)
	out := new(UploadResp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getuserinfoService) GetUserHouses(ctx context.Context, in *HousesRequest, opts ...client.CallOption) (*HousesResponse, error) {
	req := c.c.NewRequest(c.name, "Getuserinfo.GetUserHouses", in)
	out := new(HousesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getuserinfoService) PutUserName(ctx context.Context, in *SetNameRequest, opts ...client.CallOption) (*SetNameResponse, error) {
	req := c.c.NewRequest(c.name, "Getuserinfo.PutUserName", in)
	out := new(SetNameResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Getuserinfo service

type GetuserinfoHandler interface {
	Getuserinfocd(context.Context, *Request, *Response) error
	UploadAvatar(context.Context, *UploadReq, *UploadResp) error
	GetUserHouses(context.Context, *HousesRequest, *HousesResponse) error
	PutUserName(context.Context, *SetNameRequest, *SetNameResponse) error
}

func RegisterGetuserinfoHandler(s server.Server, hdlr GetuserinfoHandler, opts ...server.HandlerOption) error {
	type getuserinfo interface {
		Getuserinfocd(ctx context.Context, in *Request, out *Response) error
		UploadAvatar(ctx context.Context, in *UploadReq, out *UploadResp) error
		GetUserHouses(ctx context.Context, in *HousesRequest, out *HousesResponse) error
		PutUserName(ctx context.Context, in *SetNameRequest, out *SetNameResponse) error
	}
	type Getuserinfo struct {
		getuserinfo
	}
	h := &getuserinfoHandler{hdlr}
	return s.Handle(s.NewHandler(&Getuserinfo{h}, opts...))
}

type getuserinfoHandler struct {
	GetuserinfoHandler
}

func (h *getuserinfoHandler) Getuserinfocd(ctx context.Context, in *Request, out *Response) error {
	return h.GetuserinfoHandler.Getuserinfocd(ctx, in, out)
}

func (h *getuserinfoHandler) UploadAvatar(ctx context.Context, in *UploadReq, out *UploadResp) error {
	return h.GetuserinfoHandler.UploadAvatar(ctx, in, out)
}

func (h *getuserinfoHandler) GetUserHouses(ctx context.Context, in *HousesRequest, out *HousesResponse) error {
	return h.GetuserinfoHandler.GetUserHouses(ctx, in, out)
}

func (h *getuserinfoHandler) PutUserName(ctx context.Context, in *SetNameRequest, out *SetNameResponse) error {
	return h.GetuserinfoHandler.PutUserName(ctx, in, out)
}
